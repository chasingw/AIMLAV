model: {
  second: {
    network_class_name: "VoxelNet"
    voxel_generator {
      point_cloud_range : [0, -40, -3, 70.4, 40, 1]
      # point_cloud_range : [0, -32.0, -3, 52.8, 32.0, 1]
      voxel_size : [0.05, 0.05, 0.1]
      max_number_of_points_per_voxel : 5
    }

    voxel_feature_extractor: {
      module_class_name: "SimpleVoxel"
      num_filters: [16]
      with_distance: false
      num_input_features: 4
    }
    middle_feature_extractor: {
      module_class_name: "SpMiddleFHD"
      # num_filters_down1: [] # protobuf don't support empty list.
      # num_filters_down2: []
      downsample_factor: 8
      num_input_features: 4
    }
    rpn: {
      module_class_name: "RPNV2"
      layer_nums: [5]
      layer_strides: [1]
      num_filters: [128]
      upsample_strides: [1]
      num_upsample_filters: [128]
      use_groupnorm: false
      num_groups: 32
      num_input_features: 128
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    num_point_features: 4 # model's num point feature should be independent of dataset
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true
    sin_error_factor: 1.0

    use_direction_classifier: true # this can help for orientation benchmark
    direction_loss_weight: 0.2 # enough.
    num_direction_bins: 2
    direction_limit_offset: 1

    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [0, -40, -2.2, 70.4, 40, 0.8]
    nms_class_agnostic: false # only valid in multi-class nms

    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      class_settings: {
        class_name: "barrier"
        anchor_generator_range: {
          sizes: [2.068, 0.616, 1.169] # wlh
          anchor_ranges: [-49.6, -49.6, -0.73911038, 49.6, 49.6, -0.73911038]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
        }
        matched_threshold : 0.6
        unmatched_threshold : 0.45
        class_name: "barrier"
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 100
        nms_score_threshold: 0.3
        nms_iou_threshold: 0.01
        region_similarity_calculator: {
          nearest_iou_similarity: {
          }
        }
      }
      # anchor_generators: {
      #   anchor_generator_stride: {
      #     sizes: [1.6, 3.9, 1.56] # wlh
      #     strides: [0.4, 0.4, 0.0] # if generate only 1 z_center, z_stride will be ignored
      #     offsets: [0.2, -39.8, -1.00] # origin_offset + strides / 2
      #     rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
      #     matched_threshold : 0.6
      #     unmatched_threshold : 0.45
      #   }
      # }
      sample_positive_fraction : -1
      sample_size : 512
      assign_per_class: true
    }
  }
}

train_input_reader: {
  dataset: {
    dataset_class_name: "NuScenesDatasetD8"
    kitti_info_path: "/media/xavier/AV_DATA/Nuscenes/nuscenes-devkit/python-sdk/data/sets/nuscenes/infos_val.pkl"
    kitti_root_path: "/media/xavier/AV_DATA/Nuscenes/nuscenes-devkit/python-sdk/data/sets/nuscenes"
  }

  batch_size: 3 # increase for GPU with higher memory
  preprocess: {
    max_number_of_voxels: 17000
    shuffle_points: true
    num_workers: 3
    groundtruth_localization_noise_std: [1.0, 1.0, 0.5]
    # groundtruth_rotation_uniform_noise: [-0.3141592654, 0.3141592654]
    # groundtruth_rotation_uniform_noise: [-1.57, 1.57]
    groundtruth_rotation_uniform_noise: [-0.78539816, 0.78539816]
    global_rotation_uniform_noise: [-0.78539816, 0.78539816]
    global_scaling_uniform_noise: [0.95, 1.05]
    global_random_rotation_range_per_object: [0, 0] # pi/4 ~ 3pi/4
    global_translate_noise_std: [0, 0, 0]
    anchor_area_threshold: -1
    remove_points_after_sample: true
    groundtruth_points_drop_percentage: 0.0
    groundtruth_drop_max_keep_points: 15
    remove_unknown_examples: false
    sample_importance: 1.0
    random_flip_x: false
    random_flip_y: true
    remove_environment: false
    database_sampler {
      database_info_path: "/media/xavier/AV_DATA/Nuscenes/nuscenes-devkit/python-sdk/data/sets/nuscenes/kitti_dbinfos_train.pkl"
      database_prep_steps {
        filter_by_difficulty {
          removed_difficulties: [-1]
        }
      }
      global_random_rotation_range_per_object: [0, 0]
      rate: 1.0
    }
  }
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        one_cycle: {
          lr_max: 2.25e-3
          moms: [0.95, 0.85]
          div_factor: 10.0
          pct_start: 0.4
        }
      }
      weight_decay: 0.01
    }
    fixed_weight_decay: true
    use_moving_average: false
  }

  steps: 27840 # 464 * 60
  steps_per_eval: 37140 # 619 * 60

  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: false 
  loss_scale_factor: -1
  clear_metrics_every_epoch: true
}

eval_input_reader: {
  dataset: {
    dataset_class_name: "NuScenesDatasetD8"
    kitti_info_path: "/media/xavier/AV_DATA/Nuscenes/nuscenes-devkit/python-sdk/data/sets/nuscenes/infos_train.pkl"
    # kitti_info_path: "/media/yy/960evo/datasets/kitti/kitti_infos_test.pkl"
    kitti_root_path: "/media/xavier/AV_DATA/Nuscenes/nuscenes-devkit/python-sdk/data/sets/nuscenes"
  }
  batch_size: 3 
  preprocess: {
    max_number_of_voxels: 40000
    shuffle_points: false
    num_workers: 3
    anchor_area_threshold: -1
    remove_environment: false
  }
}

runtime.step=50, runtime.steptime=2.833, runtime.voxel_gene_time=0.004514, runtime.prep_time=0.8889, loss.cls_loss=1.713e+03, loss.cls_loss_rt=331.4, loss.loc_loss=1.924, loss.loc_loss_rt=3.83, loss.loc_elem=[0.04933, 0.07762, 1.089, 0.2636, 0.2032, 0.07063, 0.1614], loss.cls_pos_rt=0.138, loss.cls_neg_rt=331.3, loss.dir_rt=0.4108, rpn_acc=0.9932, pr.prec@10=4.576e-05, pr.rec@10=1.0, pr.prec@30=3.607e-05, pr.rec@30=0.3313, pr.prec@50=7.043e-05, pr.rec@50=0.01035, pr.prec@70=0.0, pr.rec@70=0.0, pr.prec@80=0.0, pr.rec@80=0.0, pr.prec@90=0.0, pr.rec@90=0.0, pr.prec@95=0.0, pr.rec@95=0.0, misc.num_vox=51000, misc.num_pos=0, misc.num_neg=70400, misc.num_anchors=70400, misc.lr=0.0002251, misc.mem_usage=75.6
runtime.step=100, runtime.steptime=1.751, runtime.voxel_gene_time=0.004536, runtime.prep_time=0.7558, loss.cls_loss=993.1, loss.cls_loss_rt=127.5, loss.loc_loss=1.744, loss.loc_loss_rt=0.0, loss.loc_elem=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], loss.cls_pos_rt=0.0, loss.cls_neg_rt=127.5, loss.dir_rt=0.0, rpn_acc=0.9966, pr.prec@10=4.064e-05, pr.rec@10=0.9977, pr.prec@30=3.604e-05, pr.rec@30=0.1871, pr.prec@50=7.021e-05, pr.rec@50=0.005848, pr.prec@70=0.0, pr.rec@70=0.0, pr.prec@80=0.0, pr.rec@80=0.0, pr.prec@90=0.0, pr.rec@90=0.0, pr.prec@95=0.0, pr.rec@95=0.0, misc.num_vox=43422, misc.num_pos=0, misc.num_neg=70400, misc.num_anchors=70400, misc.lr=0.0002254, misc.mem_usage=75.5
runtime.step=150, runtime.steptime=2.02, runtime.voxel_gene_time=0.003705, runtime.prep_time=0.8567, loss.cls_loss=684.4, loss.cls_loss_rt=37.7, loss.loc_loss=1.589, loss.loc_loss_rt=0.0, loss.loc_elem=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], loss.cls_pos_rt=0.0, loss.cls_neg_rt=37.7, loss.dir_rt=0.0, rpn_acc=0.9977, pr.prec@10=4.116e-05, pr.rec@10=0.8383, pr.prec@30=3.604e-05, pr.rec@30=0.1215, pr.prec@50=7.017e-05, pr.rec@50=0.003797, pr.prec@70=0.0, pr.rec@70=0.0, pr.prec@80=0.0, pr.rec@80=0.0, pr.prec@90=0.0, pr.rec@90=0.0, pr.prec@95=0.0, pr.rec@95=0.0, misc.num_vox=51000, misc.num_pos=0, misc.num_neg=70400, misc.num_anchors=70400, misc.lr=0.0002259, misc.mem_usage=75.8
runtime.step=200, runtime.steptime=1.984, runtime.voxel_gene_time=0.003407, runtime.prep_time=0.8666, loss.cls_loss=517.1, loss.cls_loss_rt=4.476, loss.loc_loss=1.5, loss.loc_loss_rt=0.8961, loss.loc_elem=[0.02831, 0.03866, 0.07762, 0.091, 0.02314, 0.01457, 0.1748], loss.cls_pos_rt=0.2113, loss.cls_neg_rt=4.265, loss.dir_rt=0.1849, rpn_acc=0.9983, pr.prec@10=4.107e-05, pr.rec@10=0.6154, pr.prec@30=3.604e-05, pr.rec@30=0.08753, pr.prec@50=7.015e-05, pr.rec@50=0.002735, pr.prec@70=0.0, pr.rec@70=0.0, pr.prec@80=0.0, pr.rec@80=0.0, pr.prec@90=0.0, pr.rec@90=0.0, pr.prec@95=0.0, pr.rec@95=0.0, misc.num_vox=51000, misc.num_pos=0, misc.num_neg=70400, misc.num_anchors=70400, misc.lr=0.0002266, misc.mem_usage=75.8